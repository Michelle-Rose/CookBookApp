@using Microsoft.AspNetCore.Identity

@model CookBookApp.Models.ViewModels.RecipeDetailsViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
}

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4">
                <h1>
                    @Model.Recipe.Name

                    @if (SignInManager.IsSignedIn(User))
                    {
                        <button id="favouriteBtn" name="isFavourited" type='button' class="btn btn-light" data-button='{"recipeId": "@Model.Recipe.Id", "userId": "@UserManager.GetUserId(User)"}'>
                            @Model.NumberOfLikes
                            @if (Model.IsFavouritedByCurrentUser)
                            {
                                @: <i class="fas fa-heart"></i>
                            }
                            else
                            {
                                @: <i class="far fa-heart"></i>
                            }
                        </button>
                    }
                    <br /><small class="text-muted">@Model.Recipe.Category.Name</small>
                </h1>
                <p>@Model.Recipe.ShortDescription</p>
                <p>
                    Created by:
                    <a asp-controller="Profiles" asp-action="Details" asp-route-id="@Model.Recipe.User.Id">
                        <i class="fas fa-user"></i> @Model.Recipe.User.UserName
                    </a>
                </p>

                <a asp-controller="Recipes" asp-action="CreatePdf" asp-route-id="@Model.Recipe.Id" class="btn btn-dark">
                    <i class="fas fa-download"></i> PDF
                </a>

                <br /><br />

                <button id="shoppingList" type='button' class="btn btn-dark" data-button='{"recipeId": "@Model.Recipe.Id" }'>
                    <i class="fab fa-google"></i> Send shopping list to Google Tasks
                </button>

                <br /><br />

                <button id="toggleEmail" class="btn btn-dark">Send recipe to email</button>

                <br />

                <div id="emailForm" class="form-group">
                    <div class="row">
                        <div class="col-md-8">
                            <input id="email" type="text" class="form-control " />

                        </div>
                        <div class="col-md-4">
                            <button id="emailRecipe" type='button' class="btn btn-dark" data-button='{"recipeId": "@Model.Recipe.Id" }'>
                                <i class="fab fa-email"></i> Send
                            </button>
                        </div>
                    </div>
                </div>


                @if (SignInManager.IsSignedIn(User))
                {
                    @if (Model.Recipe.UserId == UserManager.GetUserId(User))
                    {
                        <a asp-controller="Recipes" asp-action="Edit" asp-route-id="@Model.Recipe.Id" class="btn btn-info"><i class="fas fa-edit"></i> Edit</a>
                        <a asp-controller="Recipes" asp-action="Delete" asp-route-id="@Model.Recipe.Id" class="btn btn-danger"><i class="fas fa-trash-alt"></i> Delete</a>
                    }
                }

            </div>
            <div class="col-md-8">
                <img alt="" src="@ViewData["RecipePicturePath"]" class="img-fluid" />
                <ul class="list-unstyled list-inline  text-center">
                    <li class="list-inline-item"><i class="fas fa-signal"></i> @Model.Recipe.DifficultyLevel</li>
                    <li class="list-inline-item"><i class="far fa-clock"></i> @Model.Recipe.PreparationTime</li>
                    <li class="list-inline-item"><i class="far fa-calendar-plus"></i> @(DateTime.Now - Model.Recipe.CreatedAt) ago</li>
                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <h5>Ingredients:</h5>
                <ul class="list-group ">
                    @foreach (var item in Model.Ingredients)
                    {
                        <li class="list-group-item">@item.Ingredient.Name: @item.Quantity</li>
                    }
                </ul>
            </div>
            <div class="col-md-8">
                <h5>Instructions:</h5>
                <p style="white-space: pre-wrap;">@Model.Recipe.Instructions</p>
            </div>
        </div>

        <br />

        <h5>Comments</h5>

        @if (SignInManager.IsSignedIn(User))
        {
            <div class="row">
                <div class="col-md-8">
                    <textarea id="commentContent" type="text" class="form-control" cols="26" rows="1"
                              placeholder="Add new comment"></textarea>
                </div>
                <div class="col-md-4">
                    <button id="commentSubmit" type='button' class="btn btn-dark"
                            data-button='{"recipeId": "@Model.Recipe.Id", "userId":"@UserManager.GetUserId(User)" }'>
                        <i class="fas fa-plus"></i> Add comment
                    </button>
                </div>
            </div>
            <br />
        }

        <div id="comments" class="list-group">
            <div id="commentsList" class="list-group-item list-group-item-action flex-column align-items-start">

                @foreach (var item in Model.Recipe.Comments.ToList())
                {
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">@item.Content</h5>
                        <small>@(DateTime.Now - item.Recipe.CreatedAt)</small>
                    </div>
                    <small>@item.User.UserName</small>
                }

            </div>
        </div>
    </div>

@section Scripts  {
    <script>
        $(function () {

            $('#emailForm').hide();

            $('#favouriteBtn').click(function () {
                var data = $.parseJSON($(this).attr('data-button'));
                var recipeId = data.recipeId;
                var userId = data.userId;

                AddToFavourite(userId, recipeId);
            });

            $('#emailRecipe').click(function () {

                var data = $.parseJSON($(this).attr('data-button'));
                var recipeId = data.recipeId;
                var email = $('#email').val();

                var vm = new Object();
                vm.RecipeId = recipeId;
                vm.Email = email;

                $.ajax({
                    url: "/api/recipeEmailSender",
                    method: "POST",
                    data: vm,
                    success: function () {
                        toastr.success("Recipe has been sent");
                    },
                    error: function (response) {
                        toastr.error("Something went wrong");
                    }
                });
            });

            $('#toggleEmail').click(function () {
                $('#emailForm').toggle("slow");
            });

            $('#shoppingList').click(function () {

                toastr.info("Creating shopping list");

                var data = $.parseJSON($(this).attr('data-button'));
                var recipeId = data.recipeId;

                $.ajax({
                    url: "/api/googleTaskLists?id=" + recipeId,
                    method: "POST",
                    data: recipeId,
                    success: function () {
                        toastr.remove();
                        toastr.success('Items successfully added to shopping list');
                    },
                    error: function (response) {
                        toastr.remove();
                        if (response.status == "409") {
                            toastr.warning("You've already created shopping list for this recipe");
                        }
                        else {
                            toastr.error('Something went wrong');
                        }
                    }
                });

            });

            $('#commentSubmit').click(function () {

                var data = $.parseJSON($(this).attr('data-button'));
                var recipeId = data.recipeId;
                var userId = data.userId;
                var content = $('#commentContent').val();

                var vm = new Object();
                vm.RecipeId = recipeId;
                vm.UserId = userId;
                vm.Content = content;

                $.ajax({
                    url: "/api/comments",
                    method: "POST",
                    data: vm,
                    success: function (response) {
                        toastr.success("Comment has been successfully added");

                        $('#commentsList').prepend(
                            '<div class="d-flex w-100 justify-content-between"><h5 class="mb-1">' + response.content +
                            '</h5 ><small>' + response.createdAt + '</small></div><small>' + response.userId + '</small>'
                        );
                    },
                    error: function () {
                        toastr.error("Something went wrong");
                    }
                });
            });

            function RemoveFromFavourite(userId, recipeId) {
                $.ajax({
                    url: "/api/favouriterecipes/" + userId + "/" + recipeId,
                    method: "DELETE",
                    success: function () {
                        toastr.success('Recipe successfully removed from favourite');
                        @{
                            if(Model.NumberOfLikes > 0)
                            {
                                @:$('[name="isFavourited"]').html('@(Model.NumberOfLikes-1)<i class="far fa-heart"></i>');
                            }
                            else
                            {
                                @:$('[name="isFavourited"]').html('@(Model.NumberOfLikes)<i class="far fa-heart"></i>');
                            }
                        }
                    }
                });
            }

            function AddToFavourite(userId, recipeId) {
                $.ajax({
                    url: "/api/favouriterecipes/",
                    method: "POST",
                    data: { UserId: userId, RecipeId: recipeId },
                    success: function () {
                        toastr.success('Recipe successfully added to favourite');
                        $('[name="isFavourited"]').html('@(Model.NumberOfLikes+1)<i class="fas fa-heart"></i>');
                    },
                    error: function () {
                        RemoveFromFavourite(userId, recipeId);
                    }
                });
            }
        });
            </script>
}